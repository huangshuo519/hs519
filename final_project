#coding:gbk
"""
对文本中的人物关系进行可视化图谱展示
作者：黄烁
2019/12/29
"""

import codecs#
import jieba.posseg as pseg
import jieba

names = {}#  保存人物，键为人物名称，值为该人物在全文中出现的次数
relationships = {}#保存人物关系的有向边，键为有向边的起点，值为一个字典 edge ，edge 的键为有向边的终点，值是有向边的权值
lineNames = []# 缓存变量，保存对每一段分词得到当前段中出现的人物名称

jieba.load_userdict("names.txt")#加载人物姓名表
with codecs.open("黎明破晓的街道.txt", 'r', 'utf8') as f:
    for line in f.readlines():
        poss = pseg.cut(line)  # 分词
        lineNames.append([])  # 增加一个人物列表
        for w in poss:
            if w.flag != 'nr' or len(w.word) < 2:
                continue  # 当分词长度小于2或该词词性不为nr（人名）时认为该词不为人名
            lineNames[-1].append(w.word)  # 为当前段的环境增加一个人物
            if names.get(w.word) is None:  # 如果某人物（w.word）不在人物字典中
                names[w.word] = 0
                relationships[w.word] = {}
            names[w.word] += 1
# 对于 lineNames 中每一行，我们为该行中出现的所有人物两两相连。如果两个人物之间尚未有边建立，则将新建的边权值设为 1，否则将已存在的边的加 1。
for line in lineNames:
    for name1 in line:
        for name2 in line:
            if name1 == name2:
                continue
            if relationships[name1].get(name2) is None:
                relationships[name1][name2] = 1
            else:
                relationships[name1][name2] = relationships[name1][name2] + 1

with codecs.open("People_node.csv", "w", "gbk") as f:
    f.write("ID Label Weight\r\n")
    for name, times in names.items():
        if times > 20:#人物名出现的次数大于20才被计入节点信息中
           f.write(name + " " + name + " " + str(times) + "\r\n")

with codecs.open("People_edge.csv", "w", "gbk") as f:
    f.write("Source Target Weight\r\n")
    for name, edges in relationships.items():
        for v, w in edges.items():
            if w > 10:#人物之间的联系出现大于10次被计入到边信息中
               f.write(name + " " + v + " " + str(w) + "\r\n")
